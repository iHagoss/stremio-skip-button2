name: Build Patch App & Upload APK

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-apk:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: ${{ runner.temp }}/android-sdk
      GRADLE_USER_HOME: ${{ runner.temp }}/.gradle

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Ensure gradle wrapper executable
        run: |
          if [ -f patcher/gradlew ]; then chmod +x patcher/gradlew; fi

      - name: Install Android commandline tools
        run: |
          set -euo pipefail
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          cd "$ANDROID_SDK_ROOT/cmdline-tools"
          CLI_ZIP="commandlinetools-linux-9477386_latest.zip"
          if [ ! -f "$CLI_ZIP" ]; then
            curl -fsSL "https://dl.google.com/android/repository/$CLI_ZIP" -o "$CLI_ZIP"
          fi
          mkdir -p latest
          unzip -qo "$CLI_ZIP" -d latest
          export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH"
          yes | sdkmanager --licenses || true

      - name: Install Android SDK packages
        env:
          PATH: ${{ env.ANDROID_SDK_ROOT }}/cmdline-tools/latest/bin:$PATH
        run: |
          set -euo pipefail
          export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH"
          retry() {
            local i=0
            until [ "$i" -ge 3 ]; do
              "$@" && break
              i=$((i+1))
              sleep $((2**i))
            done
            if [ "$i" -ge 3 ]; then
              echo "Command failed after retries" >&2
              return 1
            fi
          }
          retry sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      - name: Create debug keystore if missing
        run: |
          set -euo pipefail
          KEYSTORE="patcher/keystore/debug.keystore"
          if [ -f "$KEYSTORE" ]; then
            echo "Keystore exists"
          else
            mkdir -p "$(dirname "$KEYSTORE")"
            keytool -genkeypair -alias androiddebugkey -keyalg RSA -keysize 2048 \
              -validity 10000 -keystore "$KEYSTORE" -storepass androiddebug -keypass androiddebug \
              -dname "CN=Android Debug,O=Android,C=US"
            echo "Generated debug keystore at $KEYSTORE"
          fi

      - name: Build Android patcher (assembleRelease)
        working-directory: ./patcher
        env:
          ANDROID_HOME: ${{ env.ANDROID_SDK_ROOT }}
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        run: |
          set -euo pipefail
          ./gradlew --no-daemon clean assembleRelease

      - name: Upload signed APK artifact
        run: |
          APK_PATH="patcher/app/build/outputs/apk/release/app-release.apk"
          if [ -f "$APK_PATH" ]; then
            cp "$APK_PATH" stremio-skip-patcher-signed.apk
            echo "Artifact ready: stremio-skip-patcher-signed.apk"
          else
            echo "APK not found at $APK_PATH" >&2
            ls -R patcher/app/build || true
            exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: stremio-skip-patcher-signed.apk
          path: stremio-skip-patcher-signed.apk
